#ifndef _VULNERS_WAZUH_H
#define _VULNERS_WAZUH_H

// CURL definitions
// Need ths to send a bit of memory directly with cURL rather then read it from a file

struct Memory {
  char *memory;
  size_t size;
};
 
static size_t read_callback(char *dest, size_t size, size_t nmemb, void *userp);
static size_t write_callback(void *contents, size_t size, size_t nmemb, void *userp);

// Convenience definitions
// These fields are required for vulns check
struct v_os_info{
    char *os_version;
    char *os_platform;
};

// Functions definitions

// Get os_info for agent_id from wdb
int get_os_info(struct v_os_info *os_info_Ptr, char * agent_id);

// get api key from wherever it may be and store it at the specified memory
int get_vulners_api_key(char **api_key);

// read file with packages names on each line and store at the specified memory
void get_packages(const char *filename, char ***packages_array_Ptr);

// buid the json body for HTTP request to vulners
cJSON* get_cJSON_payload(char **packages_list, struct v_os_info *os_info_Ptr, char *vulners_key);

// perform the HTTP request to vulners, store result in resPtr memory
int perform_vulners_request(struct Memory *dataPtr, struct Memory *resPtr);

// read the file with JSON result from vulners API
// and write back JSON with package: list of CVEs
void write_vulns(struct Memory*);

#endif