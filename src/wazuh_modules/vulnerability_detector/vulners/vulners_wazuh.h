#ifndef _VULNERS_WAZUH_H
#define _VULNERS_WAZUH_H

// #include "wm_vuln_detector.h"
// #include "../wmodules.h"

// Need this to send a bit of memery directly with cURL rather then read it from a file
struct WriteThis {
  const char *readptr;
  size_t sizeleft;
};
// ----||----- 
static size_t read_callback(char *dest, size_t size, size_t nmemb, void *userp);

// These fields are required for vulns check
struct v_os_info{
    char *os_version;
    char *os_platform;
};
typedef struct v_os_info v_os_info;

// Get os_info for agent_id from wdb
int get_os_info(v_os_info *infoPtr, char * agent_id);

// get api key from wherever it may be and store it at the specified memory
int get_vulners_api_key(char **api_key);

// read file with packages names on each line and store at the specified memory
void get_packages(const char *filename, char ***packages_array_Ptr);

// buid the json body for HTTP request to vulners
cJSON* get_cJSON_payload(char **packages_list, v_os_info *os_info_Ptr, char *vulners_key);

// read the file with JSON result from vulners API
// and write back JSON with package: list of CVEs
void write_vulns();

#endif